package core;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Map;
import java.util.TimeZone;
import java.util.TreeMap;

import org.codehaus.jettison.json.JSONArray;
import org.codehaus.jettison.json.JSONException;
import org.codehaus.jettison.json.JSONObject;

public class Main {

	private static final TimeZone TZ_UTC = TimeZone.getTimeZone("UTC");
	private static final SimpleDateFormat DT_FMTR = new SimpleDateFormat(
			"yyyy-MM-dd");
	static {
		DT_FMTR.setTimeZone(TZ_UTC);
	}

	public static final String ST_PILOT = "pilot";
	public static final String ST_ON_BOARDING = "on-boarding";
	public static final String ST_SUSTAINING = "sustaining";

	public static void main(String[] args) throws JSONException {
		// processJSONExample();
		processDateToIntegerMapping();
	}

	protected static void processDateToIntegerMapping() {
		/*
		 * set up
		 */
		String unit = "weeks";
		int nmbrOfUnits = 8;
		Calendar currCal = new GregorianCalendar(TZ_UTC);
		currCal.add(Calendar.DAY_OF_MONTH, -1);
		String endDate = DT_FMTR.format(currCal.getTime());
		currCal.add(Calendar.DAY_OF_MONTH, -55);
		String startDate = DT_FMTR.format(currCal.getTime());

		/*
		 * test code
		 */
		List<Integer> bins = new ArrayList<Integer>();
		for (int i = 0; i < nmbrOfUnits; i++) {
			bins.add(new Integer(i));
		}

		Map<String, Integer> dateIntMap = new TreeMap<String, Integer>();
		int endYear = Integer.parseInt(endDate.substring(0, 4));
		int endMonth = Integer.parseInt(endDate.substring(5, 7)) - 1; // 0 - 11
		int endDay = Integer.parseInt(endDate.substring(8, 10));
		int year = Integer.parseInt(startDate.substring(0, 4));
		int month = Integer.parseInt(startDate.substring(5, 7)) - 1; // 0 - 11
		int day = Integer.parseInt(startDate.substring(8, 10));
		Calendar cal = new GregorianCalendar(TZ_UTC);
		cal.set(year, month, day);
		Calendar endCal = new GregorianCalendar(TZ_UTC);
		endCal.set(endYear, endMonth, endDay);
		int binIdx = 0;
		int cntDays = 0;
		do {
			cntDays++;
			String date = DT_FMTR.format(cal.getTime());
			dateIntMap.put(date, bins.get(binIdx));
			if (unit.equals("days")) {
				binIdx++;
			} else {
				if (cntDays % 7 == 0) {
					binIdx++;
				}
			}
			cal.add(Calendar.DAY_OF_MONTH, 1);
		} while (!cal.after(endCal));

		for (String dateKey : dateIntMap.keySet()) {
			System.out.println(dateKey + ": " + dateIntMap.get(dateKey));
		}
	}

	protected static void processJSONExample() throws JSONException {
		final JSONObject army = new JSONObject();
		army.put("organization", "Army");
		army.put("status", ST_SUSTAINING);
		army.put("oldStatus", ST_ON_BOARDING);
		army.put("deeProv", "123456");
		army.put("bbProv", "7890");
		army.put("OpsFlag", "statusChange");

		final JSONObject af = new JSONObject();
		af.put("organization", "Air Force");
		af.put("status", ST_ON_BOARDING);
		af.put("deeProv", "23432");
		af.put("bbProv", "4563");
		af.put("OpsFlag", "edit");

		final JSONObject navy = new JSONObject();
		navy.put("organization", "Navy");
		navy.put("status", ST_SUSTAINING);
		navy.put("deeProv", "23245");
		navy.put("bbProv", "3256");
		navy.put("OpsFlag", "edit");

		final JSONObject cc = new JSONObject();
		cc.put("organization", "Coast Guard");
		cc.put("status", ST_PILOT);
		cc.put("deeProv", "23245");
		cc.put("bbProv", "3256");
		cc.put("OpsFlag", "create");

		final JSONArray arr = new JSONArray();
		arr.put(army);
		arr.put(af);
		arr.put(navy);
		arr.put(cc);

		final JSONObject obj = new JSONObject();
		obj.put("JTOdata", arr);

		System.out.println(obj.toString());

		JSONObject clone = new JSONObject(obj.toString());
		JSONArray data = clone.getJSONArray("JTOdata");
		for (int i = 0; i < data.length(); i++) {
			JSONObject org = data.getJSONObject(i);
			System.out.println(org.toString());
		}

		final JSONObject respObj1 = new JSONObject();
		respObj1.put("status", ST_ON_BOARDING);
		respObj1.put("organization", "Army");
		respObj1.put("dee", "231432");
		respObj1.put("bb", "23541");
		respObj1.put("operation", "update");
		respObj1.put("operStatus", "success");

		final JSONObject respObj2 = new JSONObject();
		respObj2.put("status", ST_ON_BOARDING);
		respObj2.put("organization", "Air Force");
		respObj2.put("dee", "10342");
		respObj2.put("bb", "4512");
		respObj2.put("operation", "update");
		respObj2.put("operStatus", "failed");
		respObj2.put("error", "Error message generated by exception.");

		JSONArray respArr = new JSONArray();
		respArr.put(respObj1);
		respArr.put(respObj2);

		System.out.println(respArr.toString(4));
	}
}
